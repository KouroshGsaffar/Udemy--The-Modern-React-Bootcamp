{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ubuntu/Desktop/Development/Udemy--The-Modern-React-Bootcamp/29. Nextjs/next-fetching-server-api/pages/post.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\n\nconst Post = ({\n  id,\n  comments\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"Comments for Post#\", id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_createElement(Comment, _objectSpread(_objectSpread({}, comment), {}, {\n    key: comment.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }))]\n}, void 0, true);\n\nconst Comment = ({\n  email,\n  body\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n    children: email\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: body\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 5\n}, this);\n\nPost.getInitialProps = async ({\n  query\n}) => {\n  const res = await axios.get('https://jsonplaceholder.typicode.com/comments?postId=1');\n  const {\n    data\n  } = res;\n  return _objectSpread(_objectSpread({}, query), {}, {\n    comments: data\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["/home/ubuntu/Desktop/Development/Udemy--The-Modern-React-Bootcamp/29. Nextjs/next-fetching-server-api/pages/post.js"],"names":["axios","Post","id","comments","comment","Comment","email","body","getInitialProps","query","res","get","data"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAD,kBACT;AAAA,0BACI;AAAA,qCAAuBD,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,eAEI,eAAC,OAAD,kCAAaE,OAAb;AAAsB,IAAA,GAAG,EAAEA,OAAO,CAACF,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ;AAAA,gBADJ;;AAMA,MAAMG,OAAO,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,kBACZ;AAAA,0BACI;AAAA,cAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,UADJ,eAEI;AAAA,cAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;;AAMAN,IAAI,CAACO,eAAL,GAAuB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AACxC,QAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,wDAAV,CAAlB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWF,GAAjB;AACA,yCAAYD,KAAZ;AAAmBN,IAAAA,QAAQ,EAAES;AAA7B;AACH,CAJD;;AAMA,eAAeX,IAAf","sourcesContent":["import axios from 'axios'\n\nconst Post = ({ id, comments }) => (\n    <>\n        <h1>Comments for Post#{id}</h1>\n        <Comment {...comment} key={comment.id} />\n    </>\n)\nconst Comment = ({ email, body }) => (\n    <div>\n        <h5>{email}</h5>\n        <p>{body}</p>\n    </div>\n)\nPost.getInitialProps = async ({ query }) => {\n    const res = await axios.get('https://jsonplaceholder.typicode.com/comments?postId=1')\n    const { data } = res;\n    return { ...query, comments: data }\n}\n\nexport default Post"]},"metadata":{},"sourceType":"module"}